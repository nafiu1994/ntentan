<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

namespace ntentan;

/**
 * Description of View
 *
 * @author ekow
 */
class View 
{
    private $layout;
    private $template;
    private $cacheTimeout = false;
    
    /**
     * The variables generated by any method called in this controller are
     * stored in this array. The values from this array would later be used
     * with the view classes to render the views.
     * @var Array
     */
    private static $variables = array();

    
    public function setContentType($contentType)
    {
        header("Content-Type: $contentType");
    }
    
    public function __construct()
    {
        $this->layout = 'main.tpl.php';
    }
    
    public function getCacheTimeout()
    {
        return $this->cacheTimeout;
    }
    
    public function setCacheTimeout($cacheTimeout)
    {
        $this->cacheTimeout = $cacheTimeout;
    }
    
    public function setLayout($layout)
    {
        $this->layout = $layout;
    }
    
    public function getTemplate()
    {
        return $this->template;
    }
    
    public function setTemplate($template)
    {
        $this->template = $template;
    }
    
    /**
     *
     * @param mixed $params1
     * @param string $params2
     */
    public static function set($params1, $params2 = null)
    {
        if (is_string($params1)) {
            self::$variables[$params1] = $params2;
        } else if (is_array($params1)) {
            self::$variables += $params1;
        }
    }

    protected function getData($variable = null)
    {
        return $variable != null ? $this->variables[$variable] : $this->variables;
    }    
    
    public function out()
    {
        require_once 'view_functions.php';
        $viewData = self::$variables;
        if($this->template != false)
        {
            $renderedTemplate = honam\TemplateEngine::render($this->template, $viewData);
            $viewData['contents'] = $renderedTemplate;
        }
        if($this->layout != FALSE)
        {
            return honam\TemplateEngine::render($this->layout, $viewData);
        }
    }
}
